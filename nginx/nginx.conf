user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # nginx-naxsi config
        ##
        # Uncomment it if you installed nginx-naxsi
        ##

        #include /etc/nginx/naxsi_core.rules;

        ##
        # nginx-passenger config
        ##
        # Uncomment it if you installed nginx-passenger
        ##

        #passenger_root /usr;
        #passenger_ruby /usr/bin/ruby;

        ##
        # Virtual Host Configs
        ##
        fastcgi_read_timeout 600s;
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


server {
        listen 80;
        server_name b.test.denong.com;
        root /data/project/web/b.test.denong.com;
        #root /data/project/web/b.test.denong.com/pay_test/alipay-md5;
        index index.php;
        location ~ .php$ {
                fastcgi_pass unix:/run/php5-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }
        fastcgi_connect_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers   4 32k;
        fastcgi_busy_buffers_size 64k;
        fastcgi_temp_file_write_size 64k;
}


################################


server {
    listen       80;
    server_name  lehu.io;

    root /alidata/www/food2send/API/public; # 该项要修改为
你准备存放相关网页的路径

    index index.php index.html;

    location / {
       # root /alidata/www/xingfu;
       # index index.php index.html;
       try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        #include /usr/local/etc/nginx/fastcgi.conf;
        include fastcgi.conf;
        fastcgi_intercept_errors on;
        fastcgi_pass   127.0.0.1:9000;
    }

    location ~ /\.(ht|svn|git) {
        deny all;
    }

}



############################



# 前端本地开发，nginx 代理配置
server {
    listen       80;
    server_name  localhost;
    charset utf-8;
    access_log  /var/log/nginx/webapp.access.log;
    error_log   /var/log/nginx/webapp.error.log;
    # 静态文件代理
    location / {
        proxy_pass 代理到本地 node 开发服务器地址;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Cache-Control' 'no-store';
    }
    # 接口代理
  location /v1/ {
            proxy_pass 代理到的接口地址;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}


##############################
# 前端本地开发，nginx 端口代理
server {

  # 设置代理端口
  listen       9001;

  server_name  localhost;

  location / {

    # 代理到接口地址
    proxy_pass url_to_interface;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # 配置允许跨域的地址
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';

    # 允许代理 http 的请求方法
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';

    # 允许代理的 http header ，包括自定义 header
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-User-Token;

    # 对 http OPTIONS 方法做特殊处理 
    if ($request_method = 'OPTIONS') {
      # add_header 'Access-Control-Max-Age' 1728000;
      # add_header 'Content-Type' 'text/plain charset=UTF-8';
      # add_header 'Content-Length' 0;
      return 200;
    }

  }
}



